---
- name: write /etc/rancher/k3s/config.yaml
  template:
    dest: /etc/rancher/k3s/config.yaml
    src: config.yaml.j2
- block:
    - name: install first k3s server
      environment:
        INSTALL_K3S_VERSION: '{{ k3s_version }}'
      shell:
        cmd: curl --fail --location --silent https://get.k3s.io | sh -s - server
        creates: /usr/local/bin/k3s-uninstall.sh
    - name: fetch k3s-token
      fetch:
        dest: '{{ k3s_build_dir }}/k3s-token'
        flat: yes
        src: /var/lib/rancher/k3s/server/token
    - name: fix access to k3s-token
      local_action:
        mode: '600'
        module: file
        path: '{{ k3s_build_dir }}/k3s-token'
      vars:
        ansible_become: no
  run_once: yes
- name: install remaining k3s servers
  environment:
    INSTALL_K3S_VERSION: '{{ k3s_version }}'
    K3S_TOKEN: '{{ lookup("file", k3s_build_dir + "/k3s-token") }}'
  shell:
    cmd: curl --fail --location --silent https://get.k3s.io | sh -s - server
    creates: /usr/local/bin/k3s-uninstall.sh
  throttle: 1
  when: inventory_hostname != groups.k3s_server[0]
- name: fetch kubeconfig
  fetch:
    dest: '{{ k3s_build_dir }}/kubeconfig.yaml.bak'
    flat: yes
    src: /etc/rancher/k3s/k3s.yaml
  notify:
    - fix access to kubeconfig
    - backup kubeconfig
    - edit kubeconfig
  run_once: yes
- meta: flush_handlers
- block:
    - block:
        - name: install operator for calico
          local_action:
            module: kubernetes.core.k8s
            src: https://docs.projectcalico.org/manifests/tigera-operator.yaml
            state: present
          vars:
            ansible_become: no
        - name: install custom resources for calico
          local_action:
            module: kubernetes.core.k8s
            template: custom-resources.yaml.j2
            state: present
          vars:
            ansible_become: no
      when: k3s_cni_plugin == 'calico'
    - name: apply post-server-up hooks
      local_action:
        module: kubernetes.core.k8s
        src: '{{ item }}'
        state: present
      vars:
        ansible_become: no
      with_fileglob:
        - '{{ k3s_hooks_dir }}/post-server-up.yaml'
        - '{{ k3s_hooks_dir }}/k3s-post-master-up.yaml'
        - '{{ k3s_hooks_dir }}/post-master-up.yaml'
  environment:
    KUBECONFIG: '{{ k3s_build_dir }}/kubeconfig.yaml'
  run_once: yes
