---
- name: Fix Search In File /etc/resolv.conf
  lineinfile:
    backrefs: yes
    line: 'search\g<1>'
    path: /etc/resolv.conf
    regexp: '^(?:domain|search)(\s.*)'
- name: Make File /etc/resolv.conf Immutable
  changed_when: false
  file:
    attributes: +i
    path: /etc/resolv.conf
- name: Disable Swap Space
  shell: dphys-swapfile uninstall && update-rc.d dphys-swapfile disable
  args:
    removes: /var/swap
- block:
    - name: apt-get update && apt-get install <packages...>
      apt:
        name:
          - initramfs-tools
          - rpi-update
        update_cache: yes
    - name: rpi-update
      command: rpi-update
      changed_when: '"already up to date" not in rpi_update.stdout or "reboot is needed" in rpi_update.stdout'
      environment:
        BOOT_PATH: '{{ boot_directory }}'
        GITHUB_API_TOKEN: '{{ github_api_token | default(omit) }}'
        ROOT_PATH: /
        SKIP_REPODELETE: 1
        SKIP_WARNING: 1
        http_proxy: '{{ proxy_url | default(omit) }}'
        https_proxy: '{{ proxy_url | default(omit) }}'
      notify: Require Reboot
      register: rpi_update
    - name: Stat File /root/.rpi-firmware
      stat:
        path: /root/.rpi-firmware
      register: rpi_firmware
    - block:
        - name: Find Kernel Versions
          find:
            file_type: directory
            paths: /root/.rpi-firmware/modules
            patterns: '*-v8+'
            recurse: no
          register: found
        - block:
            - name: update-initramfs -c -b {{ boot_directory }}
              shell:
                cmd: update-initramfs -c -k {{ item }} -b {{ boot_directory }}
                creates: '{{ boot_directory }}/initrd.img-{{ item }}'
              with_items: '{{ versions }}'
            - name: set initramfs in {{ boot_directory }}
              lineinfile:
                insertafter: '^\s*\[\s*all\s*\]'
                line: initramfs initrd.img-{{ item }}
                path: '{{ boot_directory }}/config.txt'
                regexp: '^initramfs\s'
              with_items: '{{ versions }}'
              notify: Require Reboot
          vars:
            versions: '{{ found.files | map(attribute="path") | map("basename") }}'
      when: rpi_firmware.stat.exists
  when: rpi_update
